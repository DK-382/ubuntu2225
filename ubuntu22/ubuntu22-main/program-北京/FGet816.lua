--- Auto generated by 'aubo_scope' v0.31.0-alpha.58 2024-08-17 13:26:19
--- DO NOT MODIFY IT!
local app = {}
local aubo = require('aubo')
local sched = sched or aubo.sched
local math = aubo.math or math
local realtime = aubo.realtime or realtime

local sleep = sched.sleep
local thread = sched.thread
local sync = sched.sync
local run = sched.run
local kill = sched.kill
local halt = sched.halt

app.PRIORITY = 1000 -- set the app priority, which determines app execution order
app.VERSION = "0.1"
app.VENDOR = "Aubo Robotics"

function p_FGet816()
    local _ENV = sched.select_robot(1)
    setCollisionStopType(1)
    setCollisionLevel(2)
    setHardwareCustomParameters("[over_force_config] \n    is_enable =true")
    setHardwareCustomParameters("handle_enable=false")
    setFreedriveDamp({0.5,0.5,0.5,0.5,0.5,0.5})
    gripper_service = sched.jsonrpc.proxy('http://127.0.0.1:8890/jsonrpc')
    setHomePosition({0,-0.2617993877991494,1.74532925199433,0.4363323129985824,1.570796326794897,0}    )
    modbusDeleteAllSignals()
    setDigitalInputActionDefault()
    setDigitalOutputRunstateDefault()
    modbusAddSignal("/dev/ttyUSB0,115200,N,8,1", 9, 1000, 3, "control", false)
    modbusAddSignal("192.168.192.5,502", 1, 0, 3, "agvGo", true)
    modbusAddSignal("192.168.192.5,502", 1, 18, 0, "agvOK", true)
    modbusAddSignal("192.168.192.5,502", 1, 8, 2, "agvOver", true)
    setPayload(3, {0,0,0}, {0,0,0}, {0,0,0,0,0,0,0,0,0})
    local agv =sched.jsonrpc.proxy('http://127.0.0.1:8989/jsonrpc')
    setTcpOffset({0,0,0,0,0,0})
    setToolVoltageOutputDomain(0)
    setToolIoInput(0, true)
    setToolIoInput(1, true)
    setToolIoInput(2, true)
    setToolIoInput(3, true)
    u5e73u9762_0= {}
    tableUp = 0
    tableGet = 0
    point_get = 0
    point_up = 0
    gdddd = 0
    PUT22 = 0
    PutUpJointRad = 0
    GetDeg = 0
    GetUpDeg = 0
    currentPointA = {-0.389928, 0.0423017, 0.29457, 3.14139, 0.000382001, -1.13983}
    currentJointDeg = {-24.2359, -11.4777, -122.244, -20.7905, -90.0055, -48.9278}
    msg_AGV_G011 = "201,1-24.235948315675,-11.477674703943,-122.24386664339,-20.790489398858,-90.005463916267,-48.927823190547-389.92824225236,42.301720259346,294.56962516571,179.98803171634,0.02188699319328,-65.307497740703"
    setLabel(1, "初始变量")
    u57fau5ea7 = {0,0,0,0,0,0}
    u5de5u5177 = {0,0,0,0,0,0}
    pzdB_p = {-0.389928570074238,0.0423186914952163,0.2945990462191183,3.141239726434327,0.0006563320463699957,-1.13974442878606}    
    pzdB_q = {-0.4230225785421997,-0.2003879790901278,-2.133618063846092,-0.3631604519124377,-1.570961388056586,-0.8540746523442558}    
    homeB_p = {-0.4440895905383619,0.008730956894958029,0.4165794373697455,-3.141375832919335,-0.0001494831508192675,-1.138237978562045}    
    homeB_q = {-0.2967226423254986,-0.1250568687976328,-1.738971713973655,-0.04285723959058371,-1.570825671019197,-0.7292846704792053}    
    getDAup_p = {-0.561567123497571,-0.006458627806895023,0.1130794966766896,-3.137758598503598,-0.009838741733118911,-1.139888684901223}    
    getDAup_q = {-0.2075310241361525,0.4847381203307634,-1.906430653428122,-0.8114301583798493,-1.565180575869427,-0.6384826364099739}    
    getDA_p = {-0.5615850719442992,-0.00644899802641226,0.03306479219313709,-3.137921176470273,-0.009709119395490995,-1.139881544981492}    
    getDA_q = {-0.207540209363387,0.6504641135803232,-1.931953338170369,-1.002886549827137,-1.565187911925502,-0.6384973085221243}    
    get_p = {-0.1447424907620278,0.6152197880812216,0.433584738265234,3.140933008474006,-0.002121293887962467,1.942920704608348}    
    get_q = {-1.533185883012056,0.3560530867755055,-1.153676787622065,0.05884617380620803,-1.570722966234146,1.236275837799549}    
    getup_p = {-0.1447488645639831,0.615269824361797,0.503480443698855,3.141013882740093,-0.001910824776384787,1.942948688626845}    
    getup_q = {-1.533179759527233,0.3883514074743971,-0.9197045560202164,0.2607454410763638,-1.570715630178071,1.236261165687399}    
    u8defu70b9_0_p = {-0.4444218383374269,0.1489216203841411,0.3427235281253589,2.595033723028563,0.2439135862433988,-1.208856825442054}    
    u8defu70b9_0_q = {-0.6555741616651132,-0.07584242127521515,-2.077272818247295,-0.926683267347303,-1.230476685472202,-0.9992258578456747}    
    u8defu70b9_1_p = {-0.4113770479654194,-0.1514184003543229,0.3429554511845085,2.595171082330687,0.2445199188623536,-1.206251298588273}    
    u8defu70b9_1_q = {0.08407544661973308,-0.1321325555106045,-2.150430091427626,-1.038781872202475,-1.625743386797203,-0.3660435219499419}    
    
    setLabel(2, "机器人编程")
    setLabel(3, "关节运动")
    setLabel(4, "等待：2.00s")
    sleep(2)
    
    setLabel(5, "funcA.lua")
    --subscript context start
    --分割字符串函数输出列表
    function string.split(str,delimiter)
    	if str  ==  nil or str ==  ''  or  delimiter  == nil then
       return  nil
    	end
    	local  result =  {}
    	for match in  (str..delimiter):gmatch("(.-)"..delimiter) do
       table.insert(result,match)
    	end
    	return result
    end
    
    --自定义函数区
    pi = 3.1416
    --弧度转换函数单个
    function toRad(degs)
        if degs==nil or degs=="" then
            return nil
        end
        return degs*(pi/180) 
    end
    -- 弧度转角度单个
    function toDeg(rads)
        if rads==nil or rads =="" then
            return nil
        end
        return rads*(180/pi)
    end
    
    -- 将角度列表转换为弧度列表
    function degToRadList(degrees)
        local radians = {}
        for i,j in ipairs(degrees) do
            radians[i] =j*(pi/180)
        end
        return radians
    end
    
    -- 将弧度列表转换为角度列表
    function radToDegList(radians)
        local degrees = {}
        for a,b in ipairs(radians) do
            degrees[a] =b*(180/pi)
        end
        return degrees
    end
    ---------------------------------------
    --subscript context end
    
    setLabel(6, "homeB")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(homeB_q, homeB_p), 1.15192, 0.872665, 0, 0)
    
    setLabel(7, "pzdB")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(pzdB_q, pzdB_p), 1.15192, 0.872665, 0, 0)
    
    setLabel(8, "等待：3.00s")
    sleep(3)
    
    sched.sync_program_point()
    if (guodu == 00211) then
        setLabel(9, "如果 guodu == 00211")
        setLabel(10, "get")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(get_q, get_p), 1.15192, 0.872665, 0, 0)
        
        setLabel(11, "getup")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(getup_q, getup_p), 1.15192, 0.872665, 0, 0)
        
        setLabel(12, "homeB")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(homeB_q, homeB_p), 1.15192, 0.872665, 0, 0)
    end
    
    setLabel(13, "FAget.lua")
    --subscript context start
    ----------------------------------------------------------
    ip = "192.168.192.111" --服务端IP地址
    port = 55000 --串口号
    client_name = "sockyddqA2" --客户端名称
    rec_key = "camera_sendA" --接收服务端发送的字符串
    socketOpen(ip, port, client_name) ----与服务端建立通信
    -- 触发拍照数据
    -- 201,1,固定，之后是关节角，位姿
    -- msg_AGV_G01="201,1,-92.32,7.82,-43.3,38.73,-90,-27.95,-103.18,455.55,668.42,179.86,0.057,-154.36"
    msg_AGV_G01="201,1,-24.24,-11.48,-122.25,-20.81,-90.01,-48.94,-389.93,42.32,294.59,179.966,0.0573,-65.317"
    socketSendLine(msg_AGV_G01, client_name) --发送给服务端字符串
    sleep(5)
    -- msg_AGV_G02="203,10,1"
    -- socketSendLine(msg_AGV_G02, client_name) --发送给服务端字符串
    -- sleep(2)
    --接收数据
    msg_send_G03="205,1"
    socketSendLine(msg_send_G03, client_name) --发送给服务端字符串
    sleep(2)
    rec_str = ""
    -- ------------------------------------------------
    --接收服务端发送的字符串后停止循环
    while(rec_str == nil or rec_str == "") 
    do
      socketReadString(rec_key, client_name, "", "", true) 
      rec_str = getString(rec_key, "")
    end
    PointAll=string.split(rec_str,",")
    -- point_get=rec_str
    -- textmsg("up point")
    -- textmsg(point_all[7])
    -- textmsg(point_all[12])
    -- textmsg("get point")
    -- textmsg(point_all[15])
    -- textmsg(point_all[20])
    --textmsg(point_get)
    -- --------------------------------------------------
    --设置相对移动
    --setTcpOffset({0,0,0.02,0,0,0})
    GetUpDeg={PointAll[7],PointAll[8],PointAll[9],PointAll[10],PointAll[11],PointAll[12]}
    GetDeg={PointAll[15],PointAll[16],PointAll[17],PointAll[18],PointAll[19],PointAll[20]}
    GetUpRad=degToRadList(GetUpDeg)
    GetRad=degToRadList(GetDeg)
    sleep(0.1)
    textmsg("GetUpRad result")
    textmsg(table.concat(GetUpRad,","))
    textmsg(table.concat(GetUpDeg),".")
    textmsg("GetRad result")
    textmsg(table.concat(GetRad,","))
    textmsg(table.concat(GetDeg,"."))
    ---------------------------主控部分--------------------------------
    --机械臂移动控制区
    moveJoint(GetUpRad, 1.0, 1.0, 0, 0)
    moveJoint(GetRad, 1.0, 1.0, 0, 0)
    sleep(2)
    --抓取
        modbusSetOutputSignal('control', 1035)
        sleep(2)
    moveJoint(GetUpRad, 1.0, 1.0, 0, 0)
    socketClose(client_name)
    textmsg("script running finish")
    --subscript context end
    
    setLabel(14, "关节运动")
    setLabel(15, "路点_0")
    moveJoint(inverseKinematics(u8defu70b9_0_q, u8defu70b9_0_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(16, "等待：1.00s")
    sleep(1)
    
    setLabel(17, "路点_1")
    moveJoint(inverseKinematics(u8defu70b9_1_q, u8defu70b9_1_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(18, "等待：1.00s")
    sleep(1)
    
    setLabel(19, "getDAup")
    moveJoint(inverseKinematics(getDAup_q, getDAup_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(20, "getDA")
    moveJoint(inverseKinematics(getDA_q, getDA_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(21, "设置 control=811")
    modbusSetOutputSignal('control', 811)
    
    setLabel(22, "等待：1.50s")
    sleep(1.5)
    
    setLabel(23, "getDAup")
    moveJoint(inverseKinematics(getDAup_q, getDAup_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(24, "homeB")
    moveJoint(inverseKinematics(homeB_q, homeB_p), 1.39626, 1.0472, 0, 0)
    
    sched.sync_program_point()
    if (agvPut == 123.0226) then
        setLabel(25, "如果 agvPut == 123.0226")
        setLabel(26, "关节运动")
        setLabel(27, "getDAup")
        moveJoint(inverseKinematics(getDAup_q, getDAup_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(28, "getDA")
        moveJoint(inverseKinematics(getDA_q, getDA_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(29, "getDAup")
        moveJoint(inverseKinematics(getDAup_q, getDAup_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(30, "关节运动")
        setLabel(31, "pzdB")
        moveJoint(inverseKinematics(pzdB_q, pzdB_p), 1.39626, 1.0472, 0, 0)
    end
end

function app:start(api)
  --
  self.api = api
  print("start---")
  p_FGet816()
end

function app:robot_error_handler(name, err)
  --
  print("An error hanppen to robot "..name)
end

-- return our app object
return app



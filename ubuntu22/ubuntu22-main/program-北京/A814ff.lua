--- Auto generated by 'aubo_scope' v0.31.0-alpha.58 2024-08-16 10:15:21
--- DO NOT MODIFY IT!
local app = {}
local aubo = require('aubo')
local sched = sched or aubo.sched
local math = aubo.math or math
local realtime = aubo.realtime or realtime

local sleep = sched.sleep
local thread = sched.thread
local sync = sched.sync
local run = sched.run
local kill = sched.kill
local halt = sched.halt

app.PRIORITY = 1000 -- set the app priority, which determines app execution order
app.VERSION = "0.1"
app.VENDOR = "Aubo Robotics"

function p_A814ff()
    local _ENV = sched.select_robot(1)
    setCollisionStopType(1)
    setCollisionLevel(2)
    setHardwareCustomParameters("[over_force_config] \n    is_enable =true")
    setHardwareCustomParameters("handle_enable=false")
    setFreedriveDamp({0.5,0.5,0.5,0.5,0.5,0.5})
    gripper_service = sched.jsonrpc.proxy('http://127.0.0.1:8890/jsonrpc')
    setHomePosition({0,-0.2617993877991494,1.74532925199433,0.4363323129985824,1.570796326794897,0}    )
    modbusDeleteAllSignals()
    setDigitalInputActionDefault()
    setDigitalOutputRunstateDefault()
    modbusAddSignal("/dev/ttyUSB0,115200,N,8,1", 9, 1000, 3, "control", false)
    modbusAddSignal("192.168.192.5,502", 1, 0, 3, "agvGo", true)
    modbusAddSignal("192.168.192.5,502", 1, 18, 0, "agvOK", true)
    modbusAddSignal("192.168.192.5,502", 1, 8, 2, "agvOver", true)
    setPayload(0, {0,0,0}, {0,0,0}, {0,0,0,0,0,0,0,0,0})
    local agv =sched.jsonrpc.proxy('http://127.0.0.1:8989/jsonrpc')
    setTcpOffset({0,0,0,0,0,0})
    setToolVoltageOutputDomain(0)
    setToolIoInput(0, true)
    setToolIoInput(1, true)
    setToolIoInput(2, true)
    setToolIoInput(3, true)
    u5e73u9762_0= {}
    tableUp = 0
    tableGet = 0
    point_get = "201,2103\r203,2105\r205,2100,1,2,2,-92.2352,22.3107,-117.5403,-138.454,-90.4041,-23.9596,0,41,-92.2352,34.3458,-119.262,-152.2109,-90.4041,-23.9596,0,41\r"
    point_up = 0
    gdddd = 0
    PUT22 = 0
    PutUpJointRad = {-1.60981, 0.389396, -2.05147, -2.41648, -1.57785, -0.418175}
    PutJointRad = {-1.60981, 0.599449, -2.08152, -2.65659, -1.57785, -0.418175}
    setLabel(1, "初始变量")
    u57fau5ea7 = {0,0,0,0,0,0}
    u5de5u5177 = {0,0,0,0,0,0}
    pzd_p = {-0.1031820082469535,0.4555501797707873,0.6684328864473573,3.139393731061584,0.001203875487738723,-2.694252353521048}    
    pzd_q = {-1.611196017914612,0.1365598350376306,-0.7557819290510288,0.6759478747853781,-1.570829339047234,-0.4877413561793484}    
    getup_p = {-0.1447488645639831,0.615269824361797,0.503480443698855,3.141013882740093,-0.001910824776384787,1.942948688626845}    
    getup_q = {-1.533179759527233,0.3883514074743971,-0.9197045560202164,0.2607454410763638,-1.570715630178071,1.236261165687399}    
    get_p = {-0.1447424907620278,0.6152197880812216,0.433584738265234,3.140933008474006,-0.002121293887962467,1.942920704608348}    
    get_q = {-1.533185883012056,0.3560530867755055,-1.153676787622065,0.05884617380620803,-1.570722966234146,1.236275837799549}    
    homeA_p = {-0.4544123117949642,-0.06242110509652263,0.4900353489150864,3.138013982338131,0.001831212770194146,-1.229411444343532}    
    homeA_q = {-0.1315783801341234,-0.07986248906151193,-1.504062589193888,0.1425762498190679,-1.570796326794897,-0.4729665392441489}    
    agvUp_p = {-0.5448911985726375,-0.005807264328444869,0.2847448931796543,3.141165124496163,-0.000592545481010776,-2.690608590254557}    
    agvUp_q = {-0.214205622593218,0.1998001245471202,-1.761751077515199,-0.3914849644182994,-1.570766982570596,0.9056067782436147}    
    agvPut_p = {-0.5449954327017199,-0.005775912126039916,0.2102653616721884,3.141370243691653,-0.0003251294323209318,-2.69063499922543}    
    agvPut_q = {-0.2142209313052755,0.28865188932879,-1.871196121756604,-0.5894447695761402,-1.570770650598634,0.9056177823277274}    
    up2_p = {-0.546893831660902,-0.001829751763671703,0.2710045745414698,3.140570202078496,-0.001380174231246704,-2.690518423290579}    
    up2_q = {-0.2206965165055936,0.2179868744714179,-1.779221379715206,-0.4281285645132952,-1.570737638346296,0.8990263359442732}    
    get2_p = {-0.5469943555446409,-0.001797158034674469,0.2102438593579288,3.141433037892947,-0.0002950392204764688,-2.690541184489188}    
    get2_q = {-0.2207148869600626,0.2929965018107056,-1.865274711932767,-0.5878051610433611,-1.570737638346296,0.8990300039723107}    
    temp_p = {-0.07661309218631321,0.4331871124796806,0.5115080722946984,2.87311040218455,0.1901991876046273,-2.779107330079547}    
    temp_q = {-1.665244956704785,-0.1882420469437156,-1.638978268556544,-0.2044265385880188,-1.617358274703393,-0.4903163118616995}    
    put2_p = {-0.1026137057964933,0.5179179457662406,0.2307078363129847,1.606152207392292,0.3826612152212194,3.097676423304653}    
    put2_q = {-1.602816028934342,0.6024253751439207,-2.022020614689404,-2.591637873865777,-1.595885638571651,-0.3820544643337914}    
    put2up_p = {-0.1026253845868344,0.5177177264611974,0.2951933977425011,1.603861059990812,0.3826280260046079,3.096821981162186}    
    put2up_q = {-1.602803781964696,0.4583765181677661,-2.002756131436259,-2.430450049784247,-1.595896642655763,-0.3820434602496788}    
    
    setLabel(2, "机器人编程")
    setLabel(3, "关节运动")
    setLabel(4, "设置 agvGo=1")
    modbusSetOutputSignal('agvGo', 1)
    
    setLabel(5, "等待：2.00s")
    sleep(2)
    
    setLabel(6, "等待：agvOver == 4")
    sched.sync_program_point()
    while not (modbusGetSignalStatus('agvOver') == 4) do
        sync()
    end
    
    setLabel(7, "等待：2.00s")
    sleep(2)
    
    setLabel(8, "homeA")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(homeA_q, homeA_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(9, "pzd")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(pzd_q, pzd_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(10, "等待：1.00s")
    sleep(1)
    
    sched.sync_program_point()
    if (guodu == 00211) then
        setLabel(11, "如果 guodu == 00211")
        setLabel(12, "get")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(get_q, get_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(13, "getup")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(getup_q, getup_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(14, "homeA")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(homeA_q, homeA_p), 1.39626, 1.0472, 0, 0)
    end
    
    setLabel(15, "funcA.lua")
    --subscript context start
    --分割字符串函数输出列表
    function string.split(str,delimiter)
    	if str  ==  nil or str ==  ''  or  delimiter  == nil then
       return  nil
    	end
    	local  result =  {}
    	for match in  (str..delimiter):gmatch("(.-)"..delimiter) do
       table.insert(result,match)
    	end
    	return result
    end
    
    --自定义函数区
    pi = 3.1416
    --弧度转换函数单个
    function toRad(degs)
        if degs==nil or degs=="" then
            return nil
        end
        return degs*(pi/180) 
    end
    -- 弧度转角度单个
    function toDeg(rads)
        if rads==nil or rads =="" then
            return nil
        end
        return rads*(180/pi)
    end
    
    -- 将角度列表转换为弧度列表
    function degToRadList(degrees)
        local radians = {}
        for i,j in ipairs(degrees) do
            radians[i] =j*(pi/180)
        end
        return radians
    end
    
    -- 将弧度列表转换为角度列表
    function radToDegList(radians)
        local degrees = {}
        for a,b in ipairs(radians) do
            degrees[a] =b*(180/pi)
        end
        return degrees
    end
    ---------------------------------------
    --subscript context end
    
    setLabel(16, "fget1.lua")
    --subscript context start
    ----------------------------------------------------------
    ip = "192.168.192.111" --服务端IP地址
    port = 55000 --串口号
    client_name = "sockebvcm1" --客户端名称
    rec_key = "camera_send" --接收服务端发送的字符串
    socketOpen(ip, port, client_name) ----与服务端建立通信
    -- 触发拍照数据
    -- 201,1,固定，之后是关节角，位姿
    msg_send_G01="201,1,-92.32,7.82,-43.3,38.73,-90,-27.95,-103.18,455.55,668.42,179.86,0.057,-154.36"
    socketSendLine(msg_send_G01, client_name) --发送给服务端字符串
    sleep(2)
    msg_send_G02="203,10,1"
    socketSendLine(msg_send_G02, client_name) --发送给服务端字符串
    sleep(2)
    --接收数据
    msg_send_G03="205,1"
    socketSendLine(msg_send_G03, client_name) --发送给服务端字符串
    sleep(2)
    rec_str = ""
    -- ------------------------------------------------
    --接收服务端发送的字符串后停止循环
    while(rec_str == nil or rec_str == "") 
    do
      socketReadString(rec_key, client_name, "", "", true) 
      rec_str = getString(rec_key, "")
    end
    point_all=string.split(rec_str,",")
    -- point_get=rec_str
    -- textmsg("up point")
    -- textmsg(point_all[7])
    -- textmsg(point_all[12])
    -- textmsg("get point")
    -- textmsg(point_all[15])
    -- textmsg(point_all[20])
    --textmsg(point_get)
    -- --------------------------------------------------
    --设置相对移动
    --setTcpOffset({0,0,0.02,0,0,0})
    point_getUp_Rad={toRad(point_all[8]),toRad(point_all[9]),toRad(point_all[10]),toRad(point_all[11]),toRad(point_all[12]),toRad(point_all[13])}
    point_get_Rad={toRad(point_all[16]),toRad(point_all[17]),toRad(point_all[18]),toRad(point_all[19]),toRad(point_all[20]),toRad(point_all[21])}
    sleep(0.1)
    textmsg("point_getUp_Rad result")
    textmsg(table.concat(point_getUp_Rad,","))
    textmsg(table.concat(radToDegList(point_getUp_Rad),"."))
    textmsg("point_get_Rad result")
    textmsg(table.concat(point_get_Rad,","))
    textmsg(table.concat(radToDegList(point_get_Rad),"."))
    ---------------------------主控部分--------------------------------
    --机械臂移动控制区
    moveJoint(point_getUp_Rad, 1.0, 1.0, 0, 0)
    moveJoint(point_get_Rad, 1.0, 1.0, 0, 0)
    sleep(2)
    --抓取
        modbusSetOutputSignal('control', 1035)
        sleep(2)
    moveJoint(point_getUp_Rad, 1.0, 1.0, 0, 0)
    socketClose(client_name)
    textmsg("script running finish")
    --subscript context end
    
    setLabel(17, "关节运动")
    setLabel(18, "pzd")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(pzd_q, pzd_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(19, "homeA")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(homeA_q, homeA_p), 1.39626, 1.0472, 0, 0)
    
    sched.sync_program_point()
    if (get == 123326.23) then
        setLabel(20, "如果 get == 123326.23")
        setLabel(21, "关节运动")
        setLabel(22, "agvUp")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(agvUp_q, agvUp_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(23, "agvPut")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(agvPut_q, agvPut_p), 1.39626, 1.0472, 0, 0)
    end
    
    setLabel(24, "关节运动")
    setLabel(25, "agvUp")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(agvUp_q, agvUp_p), 1.39626, 1.0472, 0, 0)
    
    setLabel(26, "直线运动")
    setLabel(27, "agvPut")
    setTcpOffset({0,0,0,0,0,0})
    moveLine(agvPut_p, 0.6, 0.2, 0, 0)
    
    setLabel(28, "等待：1.00s")
    sleep(1)
    
    setLabel(29, "设置 control=299")
    modbusSetOutputSignal('control', 299)
    
    setLabel(30, "等待：1.00s")
    sleep(1)
    
    setLabel(31, "agvUp")
    setTcpOffset({0,0,0,0,0,0})
    moveLine(agvUp_p, 0.6, 0.2, 0, 0)
    
    setLabel(32, "关节运动")
    setLabel(33, "homeA")
    setTcpOffset({0,0,0,0,0,0})
    moveJoint(inverseKinematics(homeA_q, homeA_p), 1.39626, 1.0472, 0, 0)
    
    sched.sync_program_point()
    if (agvPut == 123.0226) then
        setLabel(34, "如果 agvPut == 123.0226")
        setLabel(35, "关节运动")
        setLabel(36, "up2")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(up2_q, up2_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(37, "get2")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(get2_q, get2_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(38, "up2")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(up2_q, up2_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(39, "homeA")
        setTcpOffset({0,0,0,0,0,0})
        moveJoint(inverseKinematics(homeA_q, homeA_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(40, "关节运动")
        setLabel(41, "temp")
        moveJoint(inverseKinematics(temp_q, temp_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(42, "put2up")
        moveJoint(inverseKinematics(put2up_q, put2up_p), 1.39626, 1.0472, 0, 0)
        
        setLabel(43, "put2")
        moveJoint(inverseKinematics(put2_q, put2_p), 1.39626, 1.0472, 0, 0)
    end
end

function app:start(api)
  --
  self.api = api
  print("start---")
  p_A814ff()
end

function app:robot_error_handler(name, err)
  --
  print("An error hanppen to robot "..name)
end

-- return our app object
return app



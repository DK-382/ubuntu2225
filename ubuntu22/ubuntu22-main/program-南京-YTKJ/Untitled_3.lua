--- Auto generated by 'aubo_scope' v0.28.4-rc.18 2025-02-11 16:17:34
--- DO NOT MODIFY IT!
local app = {}
local aubo = require('aubo')
local sched = sched or aubo.sched
local math = aubo.math or math

local sleep = sched.sleep
local thread = sched.thread
local sync = sched.sync
local run = sched.run
local kill = sched.kill
local halt = sched.halt

app.PRIORITY = 1000 -- set the app priority, which determines app execution order
app.VERSION = "0.1"
app.VENDOR = "Aubo Robotics"

function p_Untitled_3()
    local _ENV = sched.select_robot(1)
    setCollisionStopType(1)
    setCollisionLevel(6)
    setFreedriveDamp({0.5,0.5,0.5,0.5,0.5,0.5})
    setHomePosition({0,-0.2617993877991494,1.74532925199433,0.4363323129985824,1.570796326794897,0}    )
    modbusDeleteAllSignals()
    setDigitalInputActionDefault()
    setDigitalOutputRunstateDefault()
    setPayload(10, {0,0,0}, {0,0,0}, {0,0,0,0,0,0,0,0,0})
    local agv =sched.jsonrpc.proxy('http://127.0.0.1:8989/jsonrpc')
    sleep(0)
    setTcpOffset({0,0,0,0,0,0})
    setToolVoltageOutputDomain(0)
    setToolIoInput(0, true)
    setToolIoInput(1, true)
    setToolIoInput(2, true)
    setToolIoInput(3, true)
    setPlanContext(sched.current_thread_id(), 1, "初始变量")
    u57fau5ea7 = {0,0,0,0,0,0}
    u5de5u5177 = {0,0,0,0,0,0}
    u8defu70b9_0_p = {-0.007012922475826844,-0.4788554641126708,0.7542485691345555,1.402506482848352,-0.7352080559134994,0.3800268722995815}    
    u8defu70b9_0_q = {-1.112133033631371,0.4322065965736948,1.848561510592403,-1.597323225365779,-1.377670676921527,-2.419819085634787}    
    u8defu70b9_1_p = {-0.1581783405009186,-0.4520302128976873,0.754248422706383,1.402508319409676,-0.7352082912954078,0.05805642168654403}    
    u8defu70b9_1_q = {-1.434099569306164,0.4322065965736948,1.848561510592403,-1.597324575403876,-1.377667976845332,-2.419819085634787}    
    u8defu70b9_2_p = {-0.1726290256393628,-0.3484032050092011,0.6859684295096633,1.417099179023411,-0.7338352409984062,0.04800981441310557}    
    u8defu70b9_2_q = {-1.434096869229969,0.6191004705906247,2.046360233659008,-1.597325925441973,-1.377667976845332,-2.419819085634787}    
    u8defu70b9_3_p = {-0.009376566137071933,-0.3887127628431084,0.6859676461515418,1.417100679406459,-0.7338349811867387,0.4839225996204813}    
    u8defu70b9_3_q = {-0.9981844180796005,0.6191004705906247,2.046361360550312,-1.597325925441973,-1.377669326883429,-2.419819085634787}    
    u8defu70b9_4_p = {-0.08169702443544075,-0.2738602065129213,0.7214874300794404,1.382094670743268,-0.7355793690442453,0.5149572725284062}    
    u8defu70b9_4_q = {-0.989787181115333,0.8402070100655066,2.046353472311182,-1.792410480594306,-1.377669326883429,-2.419819085634787}    
    u8defu70b9_5_p = {-0.1535387187777696,-0.241038568193021,0.7214871441704107,1.382098304201718,-0.7355791884050348,0.2376934481023336}    
    u8defu70b9_5_q = {-1.267048555241131,0.8402070100655066,2.046353472311182,-1.792413180670501,-1.377669326883429,-2.419819085634787}    
    
    
    function str_cat(str1, str2)
        return tostring(str1) .. tostring(str2)
    end
    
    local function calculate_point_to_move_towards(feature, direction, position_distance)
        local posDir={direction[1], direction[2], direction[3]}
        if (math.norm(posDir) < 1e-6) then
            return getTargetTcpPose()
        end
        local direction_vector_normalized=math.normalize(posDir)
        local displacement_pose={direction_vector_normalized[1] * position_distance,direction_vector_normalized[2] * position_distance,direction_vector_normalized[3] * position_distance,0,0,0}

        local wanted_displacement_in_base_frame=poseSub(poseTrans(feature, displacement_pose), feature)
        return poseAdd(getTargetTcpPose(), wanted_displacement_in_base_frame)
    end
    setPlanContext(sched.current_thread_id(), 2, "机器人编程")
    while true do
        setPlanContext(sched.current_thread_id(), 3, "关节运动")
        setPlanContext(sched.current_thread_id(), 4, "路点_0")
        moveJoint(inverseKinematics(u8defu70b9_0_q, u8defu70b9_0_p), 1.39626, 1.0472, 0, 0)
        
        setPlanContext(sched.current_thread_id(), 5, "关节运动")
        setPlanContext(sched.current_thread_id(), 6, "路点_1")
        moveJoint(inverseKinematics(u8defu70b9_1_q, u8defu70b9_1_p), 1.39626, 1.0472, 0, 0)
        
        setPlanContext(sched.current_thread_id(), 7, "关节运动")
        setPlanContext(sched.current_thread_id(), 8, "路点_2")
        moveJoint(inverseKinematics(u8defu70b9_2_q, u8defu70b9_2_p), 1.39626, 1.0472, 0, 0)
        
        setPlanContext(sched.current_thread_id(), 9, "关节运动")
        setPlanContext(sched.current_thread_id(), 10, "路点_3")
        moveJoint(inverseKinematics(u8defu70b9_3_q, u8defu70b9_3_p), 1.39626, 1.0472, 0, 0)
        
        setPlanContext(sched.current_thread_id(), 11, "关节运动")
        setPlanContext(sched.current_thread_id(), 12, "路点_4")
        moveJoint(inverseKinematics(u8defu70b9_4_q, u8defu70b9_4_p), 1.39626, 1.0472, 0, 0)
        
        setPlanContext(sched.current_thread_id(), 13, "关节运动")
        setPlanContext(sched.current_thread_id(), 14, "路点_5")
        moveJoint(inverseKinematics(u8defu70b9_5_q, u8defu70b9_5_p), 1.39626, 1.0472, 0, 0)
        sched.cancel_point()
    end
end

function app:start(api)
  --
  self.api = api
  print("start---")
  p_Untitled_3()
end

function app:robot_error_handler(name, err)
  --
  print("An error hanppen to robot "..name)
end

-- return our app object
return app



--初始化全局运动属性
init_global_move_profile()

--move_joint move_line ==内部参数都是关节角，一样！！！

--设置最大速度
set_joint_maxvelc({1,1,1,1,1,1})
set_joint_maxacc({1,1,1,1,1,1})
set_end_maxvelc(1)
set_end_maxacc(1)

--定义函数，把变量点赋值给示教器程序变量路点
function set_tp(V_P_Point,teachpoint)
	cpstr="0,0,0,0,0,0,0"
	for i=1,6,1 do
		cpstr=cpstr..","..tostring(teachpoint[i])
	end  
	print("cwp:"..cpstr)
	set_global_variable(V_P_Point,cpstr)
end
------------------------------------------------------------
--当前点函数
--[[ 
	--当前实时路点
	Table_Point=get_current_waypoint() --okok
	print(table.getn(Table_Point))
	pos_X=Table_Point.pos.x
	pos_Y=Table_Point.pos.y
	pos_Z=Table_Point.pos.z
	ori_w=Table_Point.ori.w
	ori_x=Table_Point.ori.x
	ori_y=Table_Point.ori.y
	ori_z=Table_Point.ori.z
	joint1=Table_Point.joint.j1
	joint2=Table_Point.joint.j2
	joint3=Table_Point.joint.j3
	joint4=Table_Point.joint.j4
	joint5=Table_Point.joint.j5
	joint6=Table_Point.joint.j6	
]]
------------------------------------------------------------
--视觉伺服--直线运动函数
function ServoLine(V_P_Point)

--正解返回法兰工具末端基于参考坐标系的位姿
--pos,ori = base_to_user(get_global_variable(V_P_Point),{0,0,0},{1,0,0,0},get_user_coord_param("coord_param"))
	pos,ori = base_to_user(get_global_variable(V_P_Point),{0,0,0},{1,0,0,0})

	pos_X=pos[1]
	pos_Y=pos[2]
	pos_Z=pos[3]
	ori_w=ori[1]
	ori_x=ori[2]
	ori_y=ori[3]
	ori_z=ori[4]
	
	print(pos_X)
	print(table.getn(ori))
	print(ori_w)

	rpy={}
	--四元数转换为欧拉角，返回弧度值{RX,RY,RZ}
	rpy=quaternion2rpy({ori_w,ori_x,ori_y,ori_z})
	print(table.getn(rpy))	
	--{rx,ry,rz}={r2d(RX),r2d(RY),r2d(RZ)}	--转角度，不需要
	RX=rpy[1]
	RY=rpy[2]
	RZ=rpy[3]
	print(RX)
	-- 执行直线运动  
	--move_line(script_common_interface("AuboVision", "hjointchange|pos_X,pos_Y,pos_Z,RX,RY,RZ"), true)

end

------------------------------------------------------------

--视觉伺服--关节运动
function ServoJoint(V_P_Point)
	--获取变量点
	Table_Point=get_global_variable(V_P_Point)
	joint1=Table_Point[1]
	joint2=Table_Point[2]
	joint3=Table_Point[3]
	joint4=Table_Point[4]
	joint5=Table_Point[5]
	joint6=Table_Point[6]
print(joint1)
print(joint5)
print(joint6)
print(type(joint1))
print(type(Table_Point))
-- 关节角弧度--字符串拼接
--move_joint(script_common_interface("AuboVision", "hjointchange|joint1,joint2,joint3,joint4,joint5,joint6"), true)

local command = string.format("hjointchange|%f,%f,%f,%f,%f,%f", joint1, joint2, joint3, joint4, joint5, joint6)
local result = script_common_interface("AuboVision", command)
move_joint(result, true)

end
------------------------------------------------------------
------------------------------------------------------------

--混搭运行OK

ServoJoint("V_P_q1")
ServoJoint("V_P_q2")
ServoJoint("V_P_q3")

ServoLine("V_P_q1")
ServoLine("V_P_q2")
ServoLine("V_P_q3")
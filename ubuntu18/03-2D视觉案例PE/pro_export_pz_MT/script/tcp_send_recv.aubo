function string.split(str, delimiter)
  if str==nil or str=='' or delimiter==nil then
    return nil
  end

  local result = {}
  for match in (str..delimiter):gmatch("(.-)"..delimiter) do
    table.insert(result, match)
  end
  return result
end

--port = 50000
--ip="192.168.192.23"
--ip = "192.168.192.190"

msg="101,1,0,2,-24.719,57.585,178.498,0.366,-49.260"
	tcp.client.send_str_data(ip,port,msg)
--[[recv = ""
     str=tcp.client.recv_str_data(ip,port)
print (type(str))
--table=[]
table=string.split(str,",")
print(tostring(str))
print(table[1])

table=recv.split(",")

--print(table)

while(recv ~= "quit") do
  sleep(0.02)
   
  if(get_global_variable("V_B_T0")) then
	tcp.client.send_str_data(ip,port,"t,0,-159.370,-845.137,609.173")
	set_global_variable("V_B_T0", false)

  end
  
  if(get_global_variable("V_B_T1")) then
	tcp.client.send_str_data(ip,port,"t,1,-159.371,-845.128,609.124")
	set_global_variable("V_B_T1", false)

  end
  
 if(get_global_variable("V_B_T2")) then
	tcp.client.send_str_data(ip,port,"t,2,-197.902,-797.018,609.174")
	set_global_variable("V_B_T2", false)

  end 
 
    recv=tcp.client.recv_str_data(ip,port)    
	
  if (recv~="") then
      data = string.split(recv, ",")
	  if(#data == 4 and data[1]=="OK" and data[2] ~="") then
		
set_global_variable("V_D_x", tonumber(data[2]))
set_global_variable("V_D_y", tonumber(data[3]))
set_global_variable("V_D_rz", tonumber(data[4]))
dx = get_global_variable("V_D_x")/1000
dy = get_global_variable("V_D_y")/1000
if dx >0.1 or dx<-0.1 or dy >0.1 or dy<-0.1 then

	    set_global_variable("V_B_G", false)
else
set_global_variable("V_B_G", true)
end
         print("h")
	  end
  else
    --set_global_variable("V_B_axis", false)
    --set_global_variable("V_B_xb", false)
    --set_global_variable("V_B_fl", false)
  end


end
]]
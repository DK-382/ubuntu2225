--Main Program

--block script function definition
  function blockScriptFunc_q()
    tcp.client.disconnect("192.168.0.51",54600)
  end  --function blockScriptFunc_q()

  function blockScriptFunc_initial()
    --initial
    set_global_variable("V_I_workNum",0)
    set_global_variable("V_I_ClawRun" ,0)
    set_global_variable("V_B_ClawRun" ,false)
    --set_global_variable("V_B_Start" ,false)
    sleep(1)
  end  --function blockScriptFunc_initial()

  function blockScriptFunc_Receive_pos()
     recv=nil
    pos=nil
    port = 54600
    ip = "192.168.0.51" 
    tcp.client.connect(ip,port) 
    
    function string.split(str, delimiter)   
    	 if str==nil or str=='' or delimiter==nil then     
    		return nil  
    	 end 
    
     local result = {}   
    for match in (str..delimiter):gmatch("(.-)"..delimiter) do    
    	 table.insert(result, match)   
    end 
     return result 
    end 
    
    if  (workNum >0) then
    tcp.client.send_str_data(ip,port,"Wait for PC Response!")
    sleep (0.1)
    end
    
    repeat
     recv=tcp.client.recv_str_data(ip,port)
    sleep (0.2)
    print(recv)
    pos = string.split(recv, ",")
     until(recv~="")
     
    print "Ready to send"
    print (pos[1])
    pose=get_current_waypoint()
    tool_pose={-0.000086,0.000701,0.164962}---#3D_TOOL_XYZ
    tool_ori=rpy2quaternion({-3.140577,-0.015406,0.685496})---#3D_TOOL_RX,RY,RZ
    joint={pose.joint.j1,pose.joint.j2,pose.joint.j3,pose.joint.j4,pose.joint.j5,pose.joint.j6}
    pos_user,ori_user=base_to_user(joint,tool_pose,tool_ori)--print user name
    RPY_user=quaternion2rpy({ori_user[1],ori_user[2],ori_user[3],ori_user[4]})
    x=(pos_user[1])*1000
    y=(pos_user[2])*1000
    z=(pos_user[3])*1000
    rx=(r2d(RPY_user[1]))
    ry=(r2d(RPY_user[2]))
    rz=(r2d(RPY_user[3]))
    addxy=(x)..","..(y)
    addzrx=(z)..","..(rx)
    addryrz=(ry)..","..(rz)
    addxyza=(addxy)..","..(addzrx)
    addxyzabc=(addxyza)..","..(addryrz)
    add000xyzabc=("000")..","..(addxyzabc)
    tcp.client.send_str_data(ip,port,(add000xyzabc))
    sleep (0.1)
    print "send_point(successful)"
     if (pos[1] =="310") then 
    print"Receive location"
    print (pos[1])
     set_global_variable("V_D_posX", tonumber(pos[2])/1000)
     set_global_variable("V_D_posY", tonumber(pos[3])/1000)
     set_global_variable("V_D_posZ", tonumber(pos[4])/1000)
     set_global_variable("V_D_posRX", tonumber(pos[5]))
     set_global_variable("V_D_posRY", tonumber(pos[6]))
     set_global_variable("V_D_posRZ", tonumber(pos[7]))
    sleep(0.1)
     set_global_variable("V_D_A1X", tonumber(pos[2])/1000)
     set_global_variable("V_D_A1Y", tonumber(pos[3])/1000)
     set_global_variable("V_D_A1Z",tonumber(pos[4])/1000)
     set_global_variable("V_D_A2RX",tonumber(pos[5]))
     set_global_variable("V_D_A2RY", tonumber(pos[6]))
     set_global_variable("V_D_A2RZ", tonumber(pos[7]))
    sleep(0.1)
    --tcp.client.send_str_data(ip,port,"101")
    set_global_variable("V_B_ClawRun", true)
    recv=nil
    print"310"
     end
    
    
    function move_pos()
     init_global_move_profile()
     --set_joint_maxacc({20,20,20,20,20,20})
    --set_joint_maxvelc({10,10,10,10,10,10})
    set_end_maxvelc(0.5)
    set_end_maxacc(0.5)
    tool_pose={-0.000086,0.000701,0.164962}---#3D_TOOL_XYZ
    tool_ori=rpy2quaternion({-3.140577,-0.015406,0.685496})---#3D_TOOL_RX,RY,RZ
    x =get_global_variable("V_D_A1X")
    y =get_global_variable("V_D_A1Y")
    z =get_global_variable("V_D_A1Z")
    rx =get_global_variable("V_D_A2RX")
    ry =get_global_variable("V_D_A2RY")
    rz =get_global_variable("V_D_A2RZ")
    pos_qua = rpy2quaternion({d2r(rx),d2r(ry),d2r(rz)})
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.264962},tool_ori),true)
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.174962},tool_ori),true)
    move_line(get_target_pose({x,y,z},pos_qua,false,tool_pose,tool_ori),true)
    sleep (0.2)
    set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_00",1)
    sleep (0.1)
    repeat
    a=get_robot_io_status(RobotIOType.RobotBoardUserDI,"U_DI_00")
    print(a)
     until(a~=0)
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.174962},tool_ori),true)
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.264962},tool_ori),true)
    end
  end  --function blockScriptFunc_Receive_pos()

  function blockScriptFunc_3D_Vision()
    
    
    port = 54600
    ip = "192.168.0.51" 
    tcp.client.connect(ip,port) 
    workNum=get_global_variable("V_I_workNum")
    
    function string.split(str, delimiter)   
    	if str==nil or str=='' or delimiter==nil then     
    		return nil  
    	 end 
     local result = {}   
    for match in (str..delimiter):gmatch("(.-)"..delimiter) do    
    	 table.insert(result, match)   
    end 
     return result 
    end 
    
    if (workNum == 0) then
    sleep (0.1)
    tcp.client.send_str_data(ip,port,"210")
    sleep (0.1)
    end
    if  (workNum >0) then
    tcp.client.send_str_data(ip,port,"Wait for PC Response!")
    sleep (0.1)
    end
    
    repeat
     recv=tcp.client.recv_str_data(ip,port)
    sleep (0.2)
    print(recv)
    pos = string.split(recv, ",")
     until(recv~="")
    
    
    
    
    
    
     if (pos[1]=="000")then
    print "Ready to send"
    print (pos[1])
    pose=get_current_waypoint()
    tool_pose={-0.000086,0.000701,0.164962}---#3D_TOOL_XYZ
    tool_ori=rpy2quaternion({-3.140577,-0.015406,0.685496})---#3D_TOOL_RX,RY,RZ
    joint={pose.joint.j1,pose.joint.j2,pose.joint.j3,pose.joint.j4,pose.joint.j5,pose.joint.j6}
    pos_user,ori_user=base_to_user(joint,tool_pose,tool_ori)--print user name
    RPY_user=quaternion2rpy({ori_user[1],ori_user[2],ori_user[3],ori_user[4]})
    x=(pos_user[1])*1000
    y=(pos_user[2])*1000
    z=(pos_user[3])*1000
    rx=(r2d(RPY_user[1]))
    ry=(r2d(RPY_user[2]))
    rz=(r2d(RPY_user[3]))
    
    addxy=(x)..","..(y)
    addzrx=(z)..","..(rx)
    addryrz=(ry)..","..(rz)
    addxyza=(addxy)..","..(addzrx)
    addxyzabc=(addxyza)..","..(addryrz)
    add000xyzabc=("000")..","..(addxyzabc)
    tcp.client.send_str_data(ip,port,(add000xyzabc))
    sleep (1)
    print "send_point(successful)"
    end
    
    if (pos[1]=="406")then 
    print "The material is empty"
    print (pos[1])
    sleep (1000)
    end
    if (pos[1]=="403")then 
    print "The material is empty"
    set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_03",1)
    sleep (2000)
    set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_03",0)
    end
    
     if (pos[1] =="310") then 
    print"Receive location"
    print (pos[1])
     set_global_variable("V_D_posX", tonumber(pos[2])/1000)
     set_global_variable("V_D_posY", tonumber(pos[3])/1000)
     set_global_variable("V_D_posZ", tonumber(pos[4])/1000)
     set_global_variable("V_D_posRX", tonumber(pos[5]))
     set_global_variable("V_D_posRY", tonumber(pos[6]))
     set_global_variable("V_D_posRZ", tonumber(pos[7]))
    sleep(1)
     set_global_variable("V_D_A1X", tonumber(pos[2])/1000)
     set_global_variable("V_D_A1Y", tonumber(pos[3])/1000)
     set_global_variable("V_D_A1Z",tonumber(pos[4])/1000)
     set_global_variable("V_D_A2RX",tonumber(pos[5]))
     set_global_variable("V_D_A2RY", tonumber(pos[6]))
     set_global_variable("V_D_A2RZ", tonumber(pos[7]))
    sleep(1)
    --tcp.client.send_str_data(ip,port,"101")
    set_global_variable("V_B_ClawRun", true)
    recv=nil
    
    
    
    
    pos=nil
    print"310"
     end
    
    
    function move_pos()
     init_global_move_profile()
     --set_joint_maxacc({20,20,20,20,20,20})
    --set_joint_maxvelc({10,10,10,10,10,10})
    set_end_maxvelc(1)
    set_end_maxacc(1)
    tool_pose={-0.000086,0.000701,0.164962}---#3D_TOOL_XYZ
    tool_ori=rpy2quaternion({-3.140577,-0.015406,0.685496})---#3D_TOOL_RX,RY,RZ
    x =get_global_variable("V_D_A1X")
    y =get_global_variable("V_D_A1Y")
    z =get_global_variable("V_D_A1Z")
    rx =get_global_variable("V_D_A2RX")
    ry =get_global_variable("V_D_A2RY")
    rz =get_global_variable("V_D_A2RZ")
    pos_qua = rpy2quaternion({d2r(rx),d2r(ry),d2r(rz)})
    
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.264962},tool_ori),true)
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.174962},tool_ori),true)
    
    move_line(get_target_pose({x,y,z},pos_qua,false,tool_pose,tool_ori),true)
    sleep (0.2)
    set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_00",1)
    sleep (1)
    
    repeat
    a=get_robot_io_status(RobotIOType.RobotBoardUserDI,"U_DI_00")
    print(a)
     until(a~=0)
    
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.174962},tool_ori),true)
    
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.264962},tool_ori),true)
    
    end
    
    
    
    
     
  end  --function blockScriptFunc_3D_Vision()

--script function definition
  function ifScriptFunc_0()
    --(Logic tree item : Set) Set
    set_current_logic_tree_item("f11cd42634f0431c930a28c761699a96")
    set_robot_io_status(RobotIOType.RobotBoardUserDO, "U_DO_02", 1)
    set_step_breakpoint()
    --(Logic tree item : Wait) Wait
    set_current_logic_tree_item("1718b941072e4c4fabb8e3900cd90771")
    sleep(0.5)
    set_step_breakpoint()
    --(Logic tree item : Set) Set
    set_current_logic_tree_item("09a1eb5d189241cb8a644a1ceb667378")
    set_robot_io_status(RobotIOType.RobotBoardUserDO, "U_DO_02", 0)
    set_step_breakpoint()
  end

  function loopScriptFunc_0()
    --(Logic tree item : Loop) Loop
    local loop_times_flag_0 = 0
    while (loop_times_flag_0 < 1) do
      loop_times_flag_0 = loop_times_flag_0 + 1
      sleep(0.001)
      if (loopScriptFunc_1() == false) then
        break
      end
    end
    --(Logic tree item : Wait) Wait
    set_current_logic_tree_item("5bf099dd8bb740a1b1f2128b3550705e")
    sleep(0.1)
    set_step_breakpoint()
    --(Logic tree item : Script) 3D_Vision
    set_current_logic_tree_item("6c737de74937446bbc6ec593d386d773")
    blockScriptFunc_3D_Vision()
    set_step_breakpoint()
    --(Logic tree item : Wait) Wait
    set_current_logic_tree_item("d214bb48b2b34303962ebded27a8dea7")
    sleep(0.5)
    set_step_breakpoint()
    --(Logic tree item : Loop) Loop
    while (get_global_variable("V_B_ClawRun") == false) do
      sleep(0.001)
      if (loopScriptFunc_2() == false) then
        break
      end
    end
    --(Logic tree item : Script) Script
    set_current_logic_tree_item("8fc54244461c40ecb98e2d8252d65bed")
    move_pos()
    set_step_breakpoint()
    --(Logic tree item : Set) Set
    set_current_logic_tree_item("5a3b76c92e6b449095ec0595508bce45")
    set_global_variable("V_I_ClawRun", 1)
    --(Logic tree item : Set) Set
    set_current_logic_tree_item("b613cee0f0534cee8e53df3bc91baa85")
    set_global_variable("V_B_ClawRun", false)
    --(Logic tree item : Procedure) putpos1
      --(Logic tree item : Set) Set
      set_current_logic_tree_item("4901bdbfbb1b4f3988869bdf1ab4d99a")
      set_global_variable("V_I_Receive", get_global_variable("V_I_Receive") - 1)
      --(Logic tree item : Move) Move
      init_global_move_profile()
      set_joint_maxvelc({1.298089,1.298089,1.298089,1.555088,1.555088,1.555088})
      set_joint_maxacc({8.654390,8.654390,8.654390,10.368128,10.368128,10.368128})
      set_relative_offset({0, 0, 0.300}, rpy2quaternion({d2r(0), d2r(0), d2r(0)}))
        --(Logic tree item : Waypoint) Waypoint_V_P_putpos
        set_current_logic_tree_item("53fcd104c1c3464fac07ecd13f2ba912")
        move_joint(get_global_variable("V_P_putpos"), true)
        set_step_breakpoint()
      --(Logic tree item : Move) Move
      init_global_move_profile()
      set_end_maxvelc(1.000000)
      set_end_maxacc(2.000000)
        --(Logic tree item : Waypoint) Waypoint_V_P_putpos
        set_current_logic_tree_item("9dd89f5c5b864f42bb2302c46ab916dc")
        move_line(get_global_variable("V_P_putpos"), true)
        set_step_breakpoint()
      --(Logic tree item : Set) Set
      set_current_logic_tree_item("8b5c92a32eee464f94768f06432f203c")
      set_robot_io_status(RobotIOType.RobotBoardUserDO, "U_DO_00", 0)
      set_step_breakpoint()
      --(Logic tree item : Wait) Wait
      set_current_logic_tree_item("fe586615e8974be6a0d609fcdf902dd9")
      sleep(0.5)
      set_step_breakpoint()
      --(Logic tree item : Set) Set
      set_current_logic_tree_item("12b2b350cd004589b0fdd345bfb1fc78")
      set_robot_io_status(RobotIOType.RobotBoardUserDO, "U_DO_01", 1)
      set_step_breakpoint()
      --(Logic tree item : Set) Set
      set_current_logic_tree_item("7438f63730d047788adfcf93d62bee50")
      set_robot_io_status(RobotIOType.RobotBoardUserDO, "U_DO_01", 0)
      set_step_breakpoint()
      --(Logic tree item : Move) Move
      init_global_move_profile()
      set_end_maxvelc(1.000000)
      set_end_maxacc(2.000000)
      set_relative_offset({0, 0, 0.30}, rpy2quaternion({d2r(0), d2r(0), d2r(0)}))
        --(Logic tree item : Waypoint) Waypoint_V_P_putpos
        set_current_logic_tree_item("58f862f0ecf4480994a94e4686f07521")
        move_line(get_global_variable("V_P_putpos"), true)
        set_step_breakpoint()
      --(Logic tree item : Set) Set
      set_current_logic_tree_item("339072c58ac141e6ad9f7cbc1419d1ea")
      set_robot_io_status(RobotIOType.RobotBoardUserDO, "U_DO_04", 1)
      set_step_breakpoint()
      --(Logic tree item : Wait) Wait
      set_current_logic_tree_item("584d87fe08424e1194052cecc983aa16")
      sleep(0.5)
      set_step_breakpoint()
      --(Logic tree item : Set) Set
      set_current_logic_tree_item("dcad674e12ea42e686124f2a954084f8")
      set_robot_io_status(RobotIOType.RobotBoardUserDO, "U_DO_04", 0)
      set_step_breakpoint()
      --(Logic tree item : If) If
      if (get_global_variable("V_I_Receive") == 0) then
        ifFuncRet = ifScriptFunc_0()
        if (ifFuncRet ~= nil) then
          do return ifFuncRet end
        end
      end
    --(Logic tree item : Move) Move
    init_global_move_profile()
    set_joint_maxvelc({1.298089,1.298089,1.298089,1.555088,1.555088,1.555088})
    set_joint_maxacc({8.654390,8.654390,8.654390,10.368128,10.368128,10.368128})
      --(Logic tree item : Waypoint) Waypoint_V_P_GET_POS
      set_current_logic_tree_item("a27fb29831f04fb4894ba442b89d034d")
      move_joint({-1.486684, 0.190646, 1.512091, -0.242189, 1.572619, 2.413768}, true)
      set_step_breakpoint()
  end

  function loopScriptFunc_1()
    --(Logic tree item : Script) q
    set_current_logic_tree_item("e3482ff0faf0492b821566a205e6f46c")
    blockScriptFunc_q()
    set_step_breakpoint()
  end

  function loopScriptFunc_2()
    --(Logic tree item : Script) Receive_pos
    set_current_logic_tree_item("69d8deeff7c448418965c9574abaab5c")
    blockScriptFunc_Receive_pos()
    set_step_breakpoint()
  end

--(Logic tree item : Project_Program) Project_Program
  --(Logic tree item : Move) Move
  init_global_move_profile()
  set_joint_maxvelc({1.298089,1.298089,1.298089,1.555088,1.555088,1.555088})
  set_joint_maxacc({8.654390,8.654390,8.654390,10.368128,10.368128,10.368128})
    --(Logic tree item : Waypoint) Waypoint_V_P_GET_POS
    set_current_logic_tree_item("315a6420acfe46eab694ce65664169d0")
    move_joint({-1.486684, 0.190646, 1.512091, -0.242189, 1.572619, 2.413768}, true)
    set_step_breakpoint()
  --(Logic tree item : Script) initial
  set_current_logic_tree_item("21480c850fac4245a5970fe12860077e")
  blockScriptFunc_initial()
  set_step_breakpoint()
  --(Logic tree item : Loop) Loop
  while (true) do
    sleep(0.001)
    if (loopScriptFunc_0() == false) then
      break
    end
  end

--Procedure Program

--block script function definition
  function blockScriptFunc_Receive_pos()
    port = 54600
    ip = "192.168.0.51" 
    tcp.client.connect(ip,port) 
    
    function string.split(str, delimiter)   
    	 if str==nil or str=='' or delimiter==nil then     
    		return nil  
    	 end 
    
     local result = {}   
    for match in (str..delimiter):gmatch("(.-)"..delimiter) do    
    	 table.insert(result, match)   
    end 
     return result 
    end 
    
    repeat
     recv=tcp.client.recv_str_data(ip,port)
    print(recv)
    pos = string.split(recv, ",")
     until(recv~="")
    
     if (pos[1]=="000")then
    print "Ready to send"
    print (pos[1])
    pose=get_current_waypoint()
    tool_pose={-0.000086,0.000701,0.164962}---#3D_TOOL_XYZ
    tool_ori=rpy2quaternion({-3.140577,-0.015406,0.685496})---#3D_TOOL_RX,RY,RZ
    joint={pose.joint.j1,pose.joint.j2,pose.joint.j3,pose.joint.j4,pose.joint.j5,pose.joint.j6}
    pos_user,ori_user=base_to_user(joint,tool_pose,tool_ori)--print user name
    RPY_user=quaternion2rpy({ori_user[1],ori_user[2],ori_user[3],ori_user[4]})
    x=(pos_user[1])*1000
    y=(pos_user[2])*1000
    z=(pos_user[3])*1000
    rx=(r2d(RPY_user[1]))
    ry=(r2d(RPY_user[2]))
    rz=(r2d(RPY_user[3]))
    
    addxy=(x)..","..(y)
    addzrx=(z)..","..(rx)
    addryrz=(ry)..","..(rz)
    addxyza=(addxy)..","..(addzrx)
    addxyzabc=(addxyza)..","..(addryrz)
    add000xyzabc=("000")..","..(addxyzabc)
    tcp.client.send_str_data(ip,port,(add000xyzabc))
    sleep (1)
    print "send_point(successful)"
    end
    
     if (pos[1] =="310") then 
    print"Receive location"
    print (pos[1])
     set_global_variable("V_D_posX", tonumber(pos[2])/1000)
     set_global_variable("V_D_posY", tonumber(pos[3])/1000)
     set_global_variable("V_D_posZ", tonumber(pos[4])/1000)
     set_global_variable("V_D_posRX", tonumber(pos[5]))
     set_global_variable("V_D_posRY", tonumber(pos[6]))
     set_global_variable("V_D_posRZ", tonumber(pos[7]))
    sleep(1)
     set_global_variable("V_D_A1X", tonumber(pos[2])/1000)
     set_global_variable("V_D_A1Y", tonumber(pos[3])/1000)
     set_global_variable("V_D_A1Z",tonumber(pos[4])/1000)
     set_global_variable("V_D_A2RX",tonumber(pos[5]))
     set_global_variable("V_D_A2RY", tonumber(pos[6]))
     set_global_variable("V_D_A2RZ", tonumber(pos[7]))
    sleep(1)
    --tcp.client.send_str_data(ip,port,"101")
    set_global_variable("V_B_ClawRun", true)
    recv=nil
    print"310"
     end
    
    
    function move_pos()
     init_global_move_profile()
     --set_joint_maxacc({20,20,20,20,20,20})
    --set_joint_maxvelc({10,10,10,10,10,10})
    set_end_maxvelc(0.5)
    set_end_maxacc(0.5)
    tool_pose={-0.000086,0.000701,0.164962}---#3D_TOOL_XYZ
    tool_ori=rpy2quaternion({-3.140577,-0.015406,0.685496})---#3D_TOOL_RX,RY,RZ
    x =get_global_variable("V_D_A1X")
    y =get_global_variable("V_D_A1Y")
    z =get_global_variable("V_D_A1Z")
    rx =get_global_variable("V_D_A2RX")
    ry =get_global_variable("V_D_A2RY")
    rz =get_global_variable("V_D_A2RZ")
    pos_qua = rpy2quaternion({d2r(rx),d2r(ry),d2r(rz)})
    
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.264962},tool_ori),true)
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.174962},tool_ori),true)
    
    move_line(get_target_pose({x,y,z},pos_qua,false,tool_pose,tool_ori),true)
    sleep (0.2)
    set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_00",1)
    sleep (1)
    
    repeat
    a=get_robot_io_status(RobotIOType.RobotBoardUserDI,"U_DI_00")
    print(a)
     until(a~=0)
    
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.174962},tool_ori),true)
    
    move_line(get_target_pose({x,y,z},pos_qua,false,{-0.000086,0.000701,0.264962},tool_ori),true)
    
    end
  end  --function blockScriptFunc_Receive_pos()

  function blockScriptFunc_3D_Vision()
    recv=nil
    pos=nil
    port = 54600
    ip = "192.168.0.51" 
    tcp.client.connect(ip,port) 
    workNum=get_global_variable("V_I_workNum")
    
    function string.split(str, delimiter)   
    	if str==nil or str=='' or delimiter==nil then     
    		return nil  
    	 end 
     local result = {}   
    for match in (str..delimiter):gmatch("(.-)"..delimiter) do    
    	 table.insert(result, match)   
    end 
     return result 
    end 
    
    if (workNum == 0) then
    sleep (0.1)
    tcp.client.send_str_data(ip,port,"210")
    sleep (0.1)
    end
    
    if  (workNum >0) then
    tcp.client.send_str_data(ip,port,"Wait for PC Response!")
    sleep (0.1)
    end
    
    repeat
     recv=tcp.client.recv_str_data(ip,port)
    sleep (0.2)
    print(recv)
    pos = string.split(recv, ",")
     until(recv~="")
    
     if (pos[1]=="000")then
    print "Ready to send"
    print (pos[1])
    pose=get_current_waypoint()
    tool_pose={-0.000086,0.000701,0.164962}---#3D_TOOL_XYZ
    tool_ori=rpy2quaternion({-3.140577,-0.015406,0.685496})---#3D_TOOL_RX,RY,RZ
    joint={pose.joint.j1,pose.joint.j2,pose.joint.j3,pose.joint.j4,pose.joint.j5,pose.joint.j6}
    pos_user,ori_user=base_to_user(joint,tool_pose,tool_ori)--print user name
    RPY_user=quaternion2rpy({ori_user[1],ori_user[2],ori_user[3],ori_user[4]})
    x=(pos_user[1])*1000
    y=(pos_user[2])*1000
    z=(pos_user[3])*1000
    rx=(r2d(RPY_user[1]))
    ry=(r2d(RPY_user[2]))
    rz=(r2d(RPY_user[3]))
    
    addxy=(x)..","..(y)
    addzrx=(z)..","..(rx)
    addryrz=(ry)..","..(rz)
    addxyza=(addxy)..","..(addzrx)
    addxyzabc=(addxyza)..","..(addryrz)
    add000xyzabc=("000")..","..(addxyzabc)
    tcp.client.send_str_data(ip,port,(add000xyzabc))
    sleep (1)
    print "send_point(successful)"
    end
    
    if (pos[1]=="406")then 
    print "The material is empty"
    print (pos[1])
    sleep (1000)
    end
    
    
    
    
    
    
    
     
  end  --function blockScriptFunc_3D_Vision()

  function blockScriptFunc_initial()
    --initial
    set_global_variable("V_I_workNum",0)
    set_global_variable("V_I_ClawRun" ,0)
    set_global_variable("V_B_ClawRun" ,false)
    --set_global_variable("V_B_Start" ,false)
    sleep(1)
  end  --function blockScriptFunc_initial()

--loop function definition
  function loopScriptFunc_0()
    --(Logic tree item : Wait) Wait
    set_current_logic_tree_item("52a71797bb1044c09d8b1b98c68df57d")
    sleep(0.1)
    set_step_breakpoint()
    --(Logic tree item : Script) 3D_Vision
    set_current_logic_tree_item("84db611b98c143e585dbe92e87f31d41")
    blockScriptFunc_3D_Vision()
    set_step_breakpoint()
    --(Logic tree item : Wait) Wait
    set_current_logic_tree_item("bad2f592e9944289b2d828f3c60646e8")
    sleep(0.1)
    set_step_breakpoint()
    --(Logic tree item : Loop) Loop
    while (get_global_variable("V_B_ClawRun") == false) do
      sleep(0.001)
      if (loopScriptFunc_1() == false) then
        break
      end
    end
  end

  function loopScriptFunc_1()
    --(Logic tree item : Script) Receive_pos
    set_current_logic_tree_item("020494c18d194435b06dd66ee75bedc4")
    blockScriptFunc_Receive_pos()
    set_step_breakpoint()
    --(Logic tree item : Script) Script
    set_current_logic_tree_item("44f03e163e0b4477a286683e72690337")
    move_pos()
    set_step_breakpoint()
  end

--(Logic tree item : Procedure_Program) Procedure_Program
  --(Logic tree item : Script) initial
  set_current_logic_tree_item("401df576058a4ffeaa80465e1a7befec")
  blockScriptFunc_initial()
  set_step_breakpoint()
  --(Logic tree item : Move) Move
  init_global_move_profile()
  set_joint_maxvelc({1.298089,1.298089,1.298089,1.555088,1.555088,1.555088})
  set_joint_maxacc({8.654390,8.654390,8.654390,10.368128,10.368128,10.368128})
    --(Logic tree item : Waypoint) Waypoint
    set_current_logic_tree_item("8486a5a46ad54044806bb0b802d5c3ea")
    move_joint(get_global_variable("V_P_Area_1"), true)
    set_step_breakpoint()
  --(Logic tree item : Loop) Loop
  while (true) do
    sleep(0.001)
    if (loopScriptFunc_0() == false) then
      break
    end
  end

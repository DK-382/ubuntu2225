function string.split(str, delimiter)
  if str==nil or str=='' or delimiter==nil then
    return nil
  end
  local result = {}
  for match in (str..delimiter):gmatch("(.-)"..delimiter) do
    table.insert(result, match)
  end
  return result
end


port = 8888
ip = "192.168.3.102"
tcp.client.connect(ip,port)
recv=0

set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_00",1)

tcp.client.send_str_data(ip,port,"SR,P1")
sleep(1)

recv=tcp.client.recv_str_data(ip,port)

set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_00",0)


--[[-0.002588,0.11159,0.162994
while(recv==nil or recv=="")do
	print("waiting for receive...")
	sleep(0.1)
end
--]]  --AA=tonumber(A*Math.PI/180.0)
--AA=tonumber(A*3.1415926/180.0)
--print("AA is"..A)--AA=tonumber(A*3.1415926/180.0)
--print("AA is"..A)

table_recv={}
table_recv=string.split(recv,",")
--print(table_recv)
print("recv is"..recv)

if(table_recv[1]=="OK" and table_recv[2]=="P1")then
  print("It is OK")
  X=tonumber(table_recv[3])
  Y=tonumber(table_recv[4])
  A=tonumber(table_recv[5])
  print("A IS"..A)  --AA=tonumber(A*Math.PI/180.0)
--AA=tonumber(A*3.1415926/180.0)
--print("AA is"..A)--AA=tonumber(A*3.1415926/180.0)
--print("AA is"..A)

  set_global_variable("V_B_PhotoResult",true)

  set_global_variable("V_D_x",X/1000)
  set_global_variable("V_D_y",Y/1000)
  set_global_variable("V_D_rz",A)

dx=X/1000
dy=Y/1000--AA=tonumber(A*3.1415926/180.0)
--print("AA is"..A)

init_global_move_profile()

set_joint_maxvelc({0.5,0.5,0.5,0.5,0.5,0.5})

set_joint_maxacc({1.0,1.0,1.0,1.0,1.0,1.0})

set_end_maxvelc(0.5)
set_end_maxacc(1.0)

--shijiao
x=-0.121387
y=0.429261
z=0.531004
rx=179.30725
ry=-1.787537
rz0=175.57716
print("x is"..x)
quliao0={x,y,z}--qianzhi1={x,y,z+0.035}
quliao_qian={x+dx-0.18,y+dy,z}
quliao_up={x+dx,y+dy,z+0.04}
quliao_out={x+dx-0.18,y+dy,z+0.04}
quliaos={x+dx,y+dy,z}
tool_s={0,0,0}

move_line(get_target_pose(quliao_qian,rpy2quaternion({d2r(rx),d2r(ry),d2r(rz0+A)}),false,
tool_s,{1.0,0.0,0.0,0.0}),true)

move_line(get_target_pose(quliaos,rpy2quaternion({d2r(rx),d2r(ry),d2r(rz0+A)}),false,
tool_s,{1.0,0.0,0.0,0.0}),true)
sleep(0.5)
--set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_01",0)

set_robot_io_status(RobotIOType.RobotBoardUserDO,"U_DO_02",1)
--print("idsjg"..result0)--print("recv i555s"..recv)
sleep(0.5)
move_line(get_target_pose(quliao_up,rpy2quaternion({d2r(rx),d2r(ry),d2r(rz0+A)}),false,
tool_s,{1.0,0.0,0.0,0.0}),true)
move_line(get_target_pose(quliao_out,rpy2quaternion({d2r(rx),d2r(ry),d2r(rz0+A)}),false,
tool_s,{1.0,0.0,0.0,0.0}),true)
--[[
print("recv 66is"..recv)
--print("rz="..rz0)

--print("asds11a")
--move_line(get_target_pose(quliao_qian,rpy2quaternion({d2r(rx),d2r(ry),d2r(rz0)}),false,
--tool_s,{1.0,0.0,0.0,0.0}),true)
move_line(get_target_pos(quliaos,rpy2quaternion({d2r(rx),d2r(ry),d2r(rz0+V_D_rz)}),false,tool_s,{1.0,0.0,0.0,0.0}),true)
move_joint(get_target_pose({x,y,z+0.035},rpy2quaternion({d2r(rx),d2r(ry),d2r(rz0+rz1)}),false,
tool_s,{1.0,0.0,0.0,0.0}),true)
--print("asd2sa")
--]]

  elseif (table_recv[1] == "NG") then
    set_global_variable("V_B_PhotoResult",false)
    print("It is Not Good")  
    print("Receiving data from vison is error !!!")
    sleep(0.2)

 end
sleep(0.2)
print("program is end")



